<project name="qbos-adapter" basedir="." default="jar">

    <property name="version" value="0.7"/>
    <property name="lib.dir" value="lib"/>
    <property name="build.dir" value="target"/>
    <property name="build.test.dir" value="${build.dir}/test"/>
    <property name="classes.dir" value="${build.dir}/classes"/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile"
            description="compiles source code and puts classes in target/ directory">
        <mkdir dir="${classes.dir}"/>
        <javac includeantruntime="false" srcdir="src" destdir="${classes.dir}"
               debug="true" classpathref="classpath">
            <classpath>
                <path refid="classpath"/>
            </classpath>
        </javac>
        <copy file="src/log4j.properties" tofile="${classes.dir}/log4j.properties"/>
    </target>


    <target name="jar" depends="test" description="creates jar file for distribution">
        <jar destfile="${build.dir}/${ant.project.name}-${version}.jar">
            <fileset dir="${classes.dir}" includes="**/*.class"/>
        </jar>
    </target>

    <target name="aroar" depends="jar" description="build a Real Ops archive">

        <mkdir dir="${build.dir}/archive"/>
        <copy file="lib/com.qbos.QTP-0.02.jar" tofile="${build.dir}/archive/com.qbos.QTP.jar"/>
        <copy file="${build.dir}/${ant.project.name}-${version}.jar"
              tofile="${build.dir}/archive/${ant.project.name}-${version}.jar"/>
        <copy file="conf/config.xml" tofile="${build.dir}/archive/config.xml"/>
        <replace file="${build.dir}/archive/config.xml">
            <replacefilter token="@ant.project.name@" value="${ant.project.name}"/>
            <replacefilter token="@version@" value="${version}"/>
        </replace>

        <zip destfile="${build.dir}/${ant.project.name}-${version}.aroar"
             basedir="${build.dir}/archive"
                />
    </target>


    <target name="compile-tests" depends="compile">
        <mkdir dir="${build.dir}/test-classes"/>
        <javac srcdir="test/" destdir="${build.dir}/test-classes"
               includeAntRuntime="false" source="1.6" debug="true">
            <classpath>
                <path refid="classpath"/>
                <pathelement path="${classes.dir}"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="compile-tests">
        <junit fork="true" forkmode="once" haltonfailure="false" haltonerror="false"
               failureproperty="tests.failures" errorproperty="tests.errors"
               includeantruntime="true" showoutput="true" printsummary="true">
            <classpath>
                <path refid="classpath"/>
                <pathelement path="${classes.dir}"/>
                <pathelement path="${build.dir}/test-classes"/>
            </classpath>
            <formatter type="xml"/>
            <batchtest fork="yes" todir="./${build.dir}/">
                <fileset dir="test/">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
        <mkdir dir="./${build.dir}/reports"/>
        <junitreport todir="./${build.dir}/reports">
            <fileset dir="./${build.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="./${build.dir}/reports/html"/>
        </junitreport>
        <fail if="tests.failures"
              message="There were JUnit failures -- see the reports in ./${build.dir}/reports"/>
    </target>

</project>
